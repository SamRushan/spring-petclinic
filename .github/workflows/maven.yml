# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  container-job:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: petclinic
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml
    - name: Import DB Data
      run: |
       psql -d postgresql://postgres@localhost/postgres -f schema.sql
       psql -d postgresql://postgres@localhost/postgres -f data.sql
      working-directory: ./src/main/resources/db/postgres/
      env:
        PGPASSWORD: petclinic      

    - name: Deploy to heroku  
      uses: akhileshns/heroku-deploy@v3.6.8
      with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: "nirushanan.srimurugan@firmtec.ch"
  
